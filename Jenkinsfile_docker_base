pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *')
    }
    stages {
        stage('build-stg') {
            steps {
                build('stg')
            }
        }
        stage('deploy-stg') {
            steps {
                script {
                    deploy('stg')
                }
            }
        }
        stage('test-stg') {
            steps {
                script {
                    test('stg')
                }
            }
        }
        stage('build-prd') {
            steps {
                build('prd')
            }
        }
        stage('deploy-prd') {
            steps {
                script {
                    deploy('prd')
                }
            }
        }
        stage('test-prd') {
            steps {
                script {
                    test('prd')
                }
            }
        }
    }
    post {
        success {
            echo "Success!"
        }
        failure {
            script {
                error "Failure!"
            }
        }
    }
}

def build(String environment){
    echo "Building to ${environment} triggered..."
    sh "Jenkins Pipeline Build", footer: "Footer Text", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "https://discord.com/api/webhooks/922206367115276368/jH9Mhwg2z8TwrS7ET6M2wnwZcSunDQhwMOYuj8Anjp93NWzCbKO6zWbMnXvMp94uX5rC"
   
}

def deploy(String environment){
    echo "Deployment to ${environment} environment..."
    sh "ui-automation/send_notification.sh 'building on ${environment} was a success' 0"

}

def test(String environment){
    echo "Running tests on ${environment} environment..."
   sh "ui-automation/send_notification.sh 'building on ${environment} was a success' 0"
}